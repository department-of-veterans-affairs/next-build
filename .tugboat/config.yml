services:
  # Configure a standard apache webserver to host our site.
  web:
    # Use the most recent version of nginx.
    image: tugboatqa/nginx:latest

    # Explicitly set this as the default service
    #   1. Clones the git repository into the service container
    #   2. Exposes port 80 to the Tugboat HTTP proxy
    #   3. Routes requests to the preview URL to this service
    default: true

    # Run these commands to initialize the server, update it with any libraries and assets required, then build your site.
    commands:
      # Commands that set up the basic preview infrastructure

      # Changes made in this section will _not_ automatically take effect when
      # base previews are refreshed through the scheduled process! A manual
      # rebuild of the base preview is necessary.
      init:
        # Create a directory for the new repository's keyring, if it doesn't exist
        - mkdir -p /etc/apt/keyrings
        # Download the new repository's GPG key and save it in the keyring directory
        - curl -fsSL https://deb.nodesource.com/gpgkey/nodesource-repo.gpg.key | sudo gpg --dearmor -o /etc/apt/keyrings/nodesource.gpg
        # Add the new repository's source list with its GPG key for package verification
        - echo "deb [signed-by=/etc/apt/keyrings/nodesource.gpg] https://deb.nodesource.com/node_18.x nodistro main" | sudo tee /etc/apt/sources.list.d/nodesource.list
        # Update local package index to recognize the new repository
        - sudo apt-get update

        # Install Cypress dependencies - https://docs.cypress.io/guides/getting-started/installing-cypress.html#System-requirements
        - apt-get install libgtk2.0-0 libgtk-3-0 libgbm-dev libnotify-dev libgconf-2-4 libnss3 libxss1 libasound2 libxtst6 xauth xvfb

        # Install Node.js from the new repository
        - sudo apt-get install -y nodejs

        # Install nvm
        - chmod -R 775 "./scripts/"
        - ./scripts/install-nvm.sh

        # Install VA Root CA
        - cp "${TUGBOAT_ROOT}"/certs/*.crt /usr/local/share/ca-certificates
        - update-ca-certificates

        # Clone vets-website
        - ./scripts/install-repos.sh
        
        # Build vets-website so assets are available (various widgets, fonts, etc)
        - ./scripts/build-vets-website.sh

        # Install and use our yarn version
        - corepack enable
        - corepack prepare yarn@stable --activate

        # Install github-status-updater
        - ./scripts/install_github_status_updater.sh

      # Load dependent libraries and assets to prepare the site for build.
      # When an existing preview is refreshed, the build workflow starts here,
      # skipping the init step, because the results of that step will
      # already be present.
      update:
        - yarn --version
        # install dependencies
        - yarn install

      # Commands that build the site. This is where you would add
      # steps required to set up or configure the site. When a
      # preview is built from a base preview, the build workflow
      # starts here, skipping the init and update steps, because the
      # results of those are inherited from the base preview.
      build:
        # Set cypress tests as pending
        - github-status-updater -action=update_state -state="pending" -context="test:cypress" -description="Waiting for static site generation..." -owner=$TUGBOAT_GITHUB_OWNER -repo=$TUGBOAT_GITHUB_REPO -ref=$TUGBOAT_PREVIEW_SHA

        # Create symlink between vets-website assets and local
        ln -s ../vets-website/build/localhost/generated "${TUGBOAT_ROOT}/public/generated"

        # Build the static pages. Set for self-signed certs
        - NODE_EXTRA_CA_CERTS=/etc/ssl/certs/ca-certificates.crt yarn export
        # Generate sitemap
        - SITE_URL=${TUGBOAT_DEFAULT_SERVICE_URL} yarn postbuild
        # Set the webroot to the output folder.
        - ln -snf "${TUGBOAT_ROOT}/out" "${DOCROOT}"

      # Run any commands after the site is built.
      online:
        # Update cypress test status message
        - github-status-updater -action=update_state -state="pending" -context="test:cypress" -description="Site built, running Cypress tests..." -owner=$TUGBOAT_GITHUB_OWNER -repo=$TUGBOAT_GITHUB_REPO -ref=$TUGBOAT_PREVIEW_SHA

        # Run cypress tests.
        - CYPRESS_BASE_URL=${TUGBOAT_DEFAULT_SERVICE_URL} yarn test:cypress || true

        # Set cypress tests as completed. Add pass/fail handling once tests are working properly.
        - github-status-updater -action=update_state -state="success" -context="test:cypress" -description="Cypress tests completed" -owner=$TUGBOAT_GITHUB_OWNER -repo=$TUGBOAT_GITHUB_REPO -ref=$TUGBOAT_PREVIEW_SHA
