name: Content Release

on:
  # TODO: remove pull_request, run on repo dispatch
  pull_request:
  # repository_dispatch:
  #   types: [content-release]
  # workflow_run:
  #   workflows: ['Continuous Integration']
  #   types: [completed]
  #   branches: [main]

jobs:
  build:
    name: Build static pages & deploy to S3
    timeout-minutes: 60
    runs-on: [self-hosted, asg]
    container:
      image: public.ecr.aws/docker/library/node:18.19.0-bullseye
      # Certs added for the self hosted runner
      env:
        NODE_EXTRA_CA_CERTS: /etc/ssl/certs/ca-certificates.crt
        APP_ENV: prod
        DEPLOY_BUCKET: next-content.www.va.gov
      ports:
        - 80
      volumes:
        - /etc/ssl/certs:/etc/ssl/certs
    steps:
    # todo: make sure this uses latest tagged release
    - name: Checkout next-build
      uses: actions/checkout@v4
      with:
        repository: department-of-veterans-affairs/next-build
        path: main

    - name: Checkout vets-website
      uses: actions/checkout@v4
      with:
        repository: department-of-veterans-affairs/vets-website
        path: vets-website

    - uses: actions/setup-node@v4
      with:
        node-version: 18
    - name: Setup Yarn
      run: |
        cd main
        corepack enable
        corepack install -g --cache-only .yarn/releases/corepack.tgz

    - name: Install dependencies
      run: cd main && yarn

    - name: Gather vets-website assets
      run: cd main && yarn setup

    - name: Build site
      uses: nick-fields/retry@v3
      with:
        max_attempts: 3
        retry_on: error
        timeout_minutes: 30
        command: cd main && yarn export --DRUPAL_CLIENT_ID ${{ secrets.PROD_DRUPAL_CLIENT_ID }} --DRUPAL_CLIENT_SECRET ${{ secrets.PROD_DRUPAL_CLIENT_SECRET }} --USE_REDIS=false

    - name: Build sitemap
      run: cd main && yarn build:sitemap

    - name: Configure AWS credentials (1)
      uses: aws-actions/configure-aws-credentials@e1e17a757e536f70e52b5a12b2e8d1d1c60e04ef # v2.0.0
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-gov-west-1

    - name: Get role from Parameter Store
      uses: department-of-veterans-affairs/action-inject-ssm-secrets@d8e6de3bde4dd728c9d732baef58b3c854b8c4bb # latest
      with:
        ssm_parameter: /frontend-team/github-actions/parameters/AWS_FRONTEND_PROD_ROLE
        env_variable_name: AWS_FRONTEND_PROD_ROLE

    - name: Configure AWS Credentials (2)
      uses: aws-actions/configure-aws-credentials@e1e17a757e536f70e52b5a12b2e8d1d1c60e04ef # v2.0.0
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-gov-west-1
        role-to-assume: ${{ env.AWS_FRONTEND_PROD_ROLE }}
        role-duration-seconds: 900
        role-session-name: vsp-frontendteam-githubaction

    - name: Deploy to S3
      run: cd main && ./scripts/github-actions/deploy.sh -s $SRC -d $DEST -v
      env:
        SRC: ./out/
        DEST: s3://${{ env.DEPLOY_BUCKET }}
